name: build

on:
  push:
    branches:
    - ""
  workflow_dispatch:

env:
  COMPILER_FLAGS: "-Os -ffunction-sections -fdata-sections -fno-unwind-tables -fno-asynchronous-unwind-tables"
  LINKER_FLAGS: "-Wl,--gc-sections"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [JCG-AC860M]
        toolchain: [mipsel-linux-musl]
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 1

      - uses: hendrikmuhs/ccache-action@main
        with:
          key: ${{ matrix.target }}-${{ matrix.toolchain }}
          max-size: 1G

      - uses: actions/setup-go@main
        with:
          go-version: '1.23.0'
          check-latest: true
          cache: false

      - name: Prepare environment
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends libtool-bin gperf python3-docutils autopoint gettext ccache liblzma-dev libltdl-dev
          echo "ROOTDIR=${{ github.workspace }}/trunk" >> $GITHUB_ENV
          echo "Compilation_time=$(TZ='Asia/Shanghai' date +%Y%m%d)" >> $GITHUB_ENV

      - name: Set script permissions
        run: |
          chmod 755 trunk/user/scripts/files/usr/bin/cloudflare_ddns.sh
          chmod 755 trunk/user/scripts/files/usr/bin/flytrap.sh
          chmod 755 trunk/user/scripts/files/usr/bin/rps-rfs-ops.sh
          echo "已设置脚本权限为 755"

      - name: Start build firmware
        run: |
          export CFLAGS="${COMPILER_FLAGS}"
          export CXXFLAGS="${COMPILER_FLAGS}"
          export LDFLAGS="${LINKER_FLAGS}"
          make ${{ matrix.target }} TOOLCHAIN=${{ matrix.toolchain }} STRIP=1

      - name: Compress firmware
        run: |
          cd trunk/images
          xz -9 *.trx

      - uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.target }}-${{ matrix.toolchain }}
          path: trunk/images/*.trx.xz
          if-no-files-found: error

      - uses: ncipollo/release-action@main
        with:
          commit: ${{ github.sha }}
          tag: ${{ env.Compilation_time }}
          artifacts: trunk/images/*.trx.xz
          allowUpdates: true
          omitBodyDuringUpdate: true

      - uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 1
